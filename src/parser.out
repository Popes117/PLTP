Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARGDELIMITER
    ARGUMENT
    COMMENT
    FUNCONTENT
    FUNCTION_DEFINITION
    SPACES

Grammar

Rule 0     S' -> Cmd
Rule 1     Cmd -> Cmd NAME SET
Rule 2     Cmd -> Cmd NAME GET
Rule 3     Cmd -> Cmd VARIABLE NAME
Rule 4     Cmd -> Cmd NAME
Rule 5     Cmd -> Cmd KEY
Rule 6     Cmd -> Cmd CR
Rule 7     Cmd -> Cmd STRING
Rule 8     Cmd -> Cmd EMIT
Rule 9     Cmd -> Cmd DOT
Rule 10    Cmd -> Cmd CHR CHAR
Rule 11    Cmd -> Cmd CHR MATH_OPERATOR
Rule 12    Cmd -> Cmd DUP
Rule 13    Cmd -> Cmd PRINTSTRING
Rule 14    Cmd -> Cmd NUMBER
Rule 15    Cmd -> Cmd MATH_OPERATOR
Rule 16    Cmd -> <empty>
Rule 17    Function -> COLON NAME Exp SEMICOLON
Rule 18    Exp -> Function_operator
Rule 19    Exp -> NUMBER
Rule 20    Exp -> Exp Function_operator
Rule 21    Exp -> Exp NUMBER
Rule 22    Function_operator -> MATH_OPERATOR
Rule 23    Function_operator -> DUP
Rule 24    Function_operator -> EMIT
Rule 25    Function_operator -> CR
Rule 26    Function_operator -> SPACE
Rule 27    Function_operator -> LPAREN
Rule 28    Function_operator -> RPAREN
Rule 29    Function_operator -> IF
Rule 30    Function_operator -> THEN
Rule 31    Function_operator -> ELSE
Rule 32    Function_operator -> PRINTSTRING
Rule 33    Cmd -> Cmd Function

Terminals, with rules where they appear

ARGDELIMITER         : 
ARGUMENT             : 
CHAR                 : 10
CHR                  : 10 11
COLON                : 17
COMMENT              : 
CR                   : 6 25
DOT                  : 9
DUP                  : 12 23
ELSE                 : 31
EMIT                 : 8 24
FUNCONTENT           : 
FUNCTION_DEFINITION  : 
GET                  : 2
IF                   : 29
KEY                  : 5
LPAREN               : 27
MATH_OPERATOR        : 11 15 22
NAME                 : 1 2 3 4 17
NUMBER               : 14 19 21
PRINTSTRING          : 13 32
RPAREN               : 28
SEMICOLON            : 17
SET                  : 1
SPACE                : 26
SPACES               : 
STRING               : 7
THEN                 : 30
VARIABLE             : 3
error                : 

Nonterminals, with rules where they appear

Cmd                  : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 33 0
Exp                  : 17 20 21
Function             : 33
Function_operator    : 18 20

Parsing method: LALR

state 0

    (0) S' -> . Cmd
    (1) Cmd -> . Cmd NAME SET
    (2) Cmd -> . Cmd NAME GET
    (3) Cmd -> . Cmd VARIABLE NAME
    (4) Cmd -> . Cmd NAME
    (5) Cmd -> . Cmd KEY
    (6) Cmd -> . Cmd CR
    (7) Cmd -> . Cmd STRING
    (8) Cmd -> . Cmd EMIT
    (9) Cmd -> . Cmd DOT
    (10) Cmd -> . Cmd CHR CHAR
    (11) Cmd -> . Cmd CHR MATH_OPERATOR
    (12) Cmd -> . Cmd DUP
    (13) Cmd -> . Cmd PRINTSTRING
    (14) Cmd -> . Cmd NUMBER
    (15) Cmd -> . Cmd MATH_OPERATOR
    (16) Cmd -> .
    (33) Cmd -> . Cmd Function

    NAME            reduce using rule 16 (Cmd -> .)
    VARIABLE        reduce using rule 16 (Cmd -> .)
    KEY             reduce using rule 16 (Cmd -> .)
    CR              reduce using rule 16 (Cmd -> .)
    STRING          reduce using rule 16 (Cmd -> .)
    EMIT            reduce using rule 16 (Cmd -> .)
    DOT             reduce using rule 16 (Cmd -> .)
    CHR             reduce using rule 16 (Cmd -> .)
    DUP             reduce using rule 16 (Cmd -> .)
    PRINTSTRING     reduce using rule 16 (Cmd -> .)
    NUMBER          reduce using rule 16 (Cmd -> .)
    MATH_OPERATOR   reduce using rule 16 (Cmd -> .)
    COLON           reduce using rule 16 (Cmd -> .)
    $end            reduce using rule 16 (Cmd -> .)

    Cmd                            shift and go to state 1

state 1

    (0) S' -> Cmd .
    (1) Cmd -> Cmd . NAME SET
    (2) Cmd -> Cmd . NAME GET
    (3) Cmd -> Cmd . VARIABLE NAME
    (4) Cmd -> Cmd . NAME
    (5) Cmd -> Cmd . KEY
    (6) Cmd -> Cmd . CR
    (7) Cmd -> Cmd . STRING
    (8) Cmd -> Cmd . EMIT
    (9) Cmd -> Cmd . DOT
    (10) Cmd -> Cmd . CHR CHAR
    (11) Cmd -> Cmd . CHR MATH_OPERATOR
    (12) Cmd -> Cmd . DUP
    (13) Cmd -> Cmd . PRINTSTRING
    (14) Cmd -> Cmd . NUMBER
    (15) Cmd -> Cmd . MATH_OPERATOR
    (33) Cmd -> Cmd . Function
    (17) Function -> . COLON NAME Exp SEMICOLON

    NAME            shift and go to state 2
    VARIABLE        shift and go to state 3
    KEY             shift and go to state 4
    CR              shift and go to state 5
    STRING          shift and go to state 6
    EMIT            shift and go to state 7
    DOT             shift and go to state 8
    CHR             shift and go to state 9
    DUP             shift and go to state 11
    PRINTSTRING     shift and go to state 12
    NUMBER          shift and go to state 13
    MATH_OPERATOR   shift and go to state 10
    COLON           shift and go to state 15

    Function                       shift and go to state 14

state 2

    (1) Cmd -> Cmd NAME . SET
    (2) Cmd -> Cmd NAME . GET
    (4) Cmd -> Cmd NAME .

    SET             shift and go to state 16
    GET             shift and go to state 17
    NAME            reduce using rule 4 (Cmd -> Cmd NAME .)
    VARIABLE        reduce using rule 4 (Cmd -> Cmd NAME .)
    KEY             reduce using rule 4 (Cmd -> Cmd NAME .)
    CR              reduce using rule 4 (Cmd -> Cmd NAME .)
    STRING          reduce using rule 4 (Cmd -> Cmd NAME .)
    EMIT            reduce using rule 4 (Cmd -> Cmd NAME .)
    DOT             reduce using rule 4 (Cmd -> Cmd NAME .)
    CHR             reduce using rule 4 (Cmd -> Cmd NAME .)
    DUP             reduce using rule 4 (Cmd -> Cmd NAME .)
    PRINTSTRING     reduce using rule 4 (Cmd -> Cmd NAME .)
    NUMBER          reduce using rule 4 (Cmd -> Cmd NAME .)
    MATH_OPERATOR   reduce using rule 4 (Cmd -> Cmd NAME .)
    COLON           reduce using rule 4 (Cmd -> Cmd NAME .)
    $end            reduce using rule 4 (Cmd -> Cmd NAME .)


state 3

    (3) Cmd -> Cmd VARIABLE . NAME

    NAME            shift and go to state 18


state 4

    (5) Cmd -> Cmd KEY .

    NAME            reduce using rule 5 (Cmd -> Cmd KEY .)
    VARIABLE        reduce using rule 5 (Cmd -> Cmd KEY .)
    KEY             reduce using rule 5 (Cmd -> Cmd KEY .)
    CR              reduce using rule 5 (Cmd -> Cmd KEY .)
    STRING          reduce using rule 5 (Cmd -> Cmd KEY .)
    EMIT            reduce using rule 5 (Cmd -> Cmd KEY .)
    DOT             reduce using rule 5 (Cmd -> Cmd KEY .)
    CHR             reduce using rule 5 (Cmd -> Cmd KEY .)
    DUP             reduce using rule 5 (Cmd -> Cmd KEY .)
    PRINTSTRING     reduce using rule 5 (Cmd -> Cmd KEY .)
    NUMBER          reduce using rule 5 (Cmd -> Cmd KEY .)
    MATH_OPERATOR   reduce using rule 5 (Cmd -> Cmd KEY .)
    COLON           reduce using rule 5 (Cmd -> Cmd KEY .)
    $end            reduce using rule 5 (Cmd -> Cmd KEY .)


state 5

    (6) Cmd -> Cmd CR .

    NAME            reduce using rule 6 (Cmd -> Cmd CR .)
    VARIABLE        reduce using rule 6 (Cmd -> Cmd CR .)
    KEY             reduce using rule 6 (Cmd -> Cmd CR .)
    CR              reduce using rule 6 (Cmd -> Cmd CR .)
    STRING          reduce using rule 6 (Cmd -> Cmd CR .)
    EMIT            reduce using rule 6 (Cmd -> Cmd CR .)
    DOT             reduce using rule 6 (Cmd -> Cmd CR .)
    CHR             reduce using rule 6 (Cmd -> Cmd CR .)
    DUP             reduce using rule 6 (Cmd -> Cmd CR .)
    PRINTSTRING     reduce using rule 6 (Cmd -> Cmd CR .)
    NUMBER          reduce using rule 6 (Cmd -> Cmd CR .)
    MATH_OPERATOR   reduce using rule 6 (Cmd -> Cmd CR .)
    COLON           reduce using rule 6 (Cmd -> Cmd CR .)
    $end            reduce using rule 6 (Cmd -> Cmd CR .)


state 6

    (7) Cmd -> Cmd STRING .

    NAME            reduce using rule 7 (Cmd -> Cmd STRING .)
    VARIABLE        reduce using rule 7 (Cmd -> Cmd STRING .)
    KEY             reduce using rule 7 (Cmd -> Cmd STRING .)
    CR              reduce using rule 7 (Cmd -> Cmd STRING .)
    STRING          reduce using rule 7 (Cmd -> Cmd STRING .)
    EMIT            reduce using rule 7 (Cmd -> Cmd STRING .)
    DOT             reduce using rule 7 (Cmd -> Cmd STRING .)
    CHR             reduce using rule 7 (Cmd -> Cmd STRING .)
    DUP             reduce using rule 7 (Cmd -> Cmd STRING .)
    PRINTSTRING     reduce using rule 7 (Cmd -> Cmd STRING .)
    NUMBER          reduce using rule 7 (Cmd -> Cmd STRING .)
    MATH_OPERATOR   reduce using rule 7 (Cmd -> Cmd STRING .)
    COLON           reduce using rule 7 (Cmd -> Cmd STRING .)
    $end            reduce using rule 7 (Cmd -> Cmd STRING .)


state 7

    (8) Cmd -> Cmd EMIT .

    NAME            reduce using rule 8 (Cmd -> Cmd EMIT .)
    VARIABLE        reduce using rule 8 (Cmd -> Cmd EMIT .)
    KEY             reduce using rule 8 (Cmd -> Cmd EMIT .)
    CR              reduce using rule 8 (Cmd -> Cmd EMIT .)
    STRING          reduce using rule 8 (Cmd -> Cmd EMIT .)
    EMIT            reduce using rule 8 (Cmd -> Cmd EMIT .)
    DOT             reduce using rule 8 (Cmd -> Cmd EMIT .)
    CHR             reduce using rule 8 (Cmd -> Cmd EMIT .)
    DUP             reduce using rule 8 (Cmd -> Cmd EMIT .)
    PRINTSTRING     reduce using rule 8 (Cmd -> Cmd EMIT .)
    NUMBER          reduce using rule 8 (Cmd -> Cmd EMIT .)
    MATH_OPERATOR   reduce using rule 8 (Cmd -> Cmd EMIT .)
    COLON           reduce using rule 8 (Cmd -> Cmd EMIT .)
    $end            reduce using rule 8 (Cmd -> Cmd EMIT .)


state 8

    (9) Cmd -> Cmd DOT .

    NAME            reduce using rule 9 (Cmd -> Cmd DOT .)
    VARIABLE        reduce using rule 9 (Cmd -> Cmd DOT .)
    KEY             reduce using rule 9 (Cmd -> Cmd DOT .)
    CR              reduce using rule 9 (Cmd -> Cmd DOT .)
    STRING          reduce using rule 9 (Cmd -> Cmd DOT .)
    EMIT            reduce using rule 9 (Cmd -> Cmd DOT .)
    DOT             reduce using rule 9 (Cmd -> Cmd DOT .)
    CHR             reduce using rule 9 (Cmd -> Cmd DOT .)
    DUP             reduce using rule 9 (Cmd -> Cmd DOT .)
    PRINTSTRING     reduce using rule 9 (Cmd -> Cmd DOT .)
    NUMBER          reduce using rule 9 (Cmd -> Cmd DOT .)
    MATH_OPERATOR   reduce using rule 9 (Cmd -> Cmd DOT .)
    COLON           reduce using rule 9 (Cmd -> Cmd DOT .)
    $end            reduce using rule 9 (Cmd -> Cmd DOT .)


state 9

    (10) Cmd -> Cmd CHR . CHAR
    (11) Cmd -> Cmd CHR . MATH_OPERATOR

    CHAR            shift and go to state 19
    MATH_OPERATOR   shift and go to state 20


state 10

    (15) Cmd -> Cmd MATH_OPERATOR .

    NAME            reduce using rule 15 (Cmd -> Cmd MATH_OPERATOR .)
    VARIABLE        reduce using rule 15 (Cmd -> Cmd MATH_OPERATOR .)
    KEY             reduce using rule 15 (Cmd -> Cmd MATH_OPERATOR .)
    CR              reduce using rule 15 (Cmd -> Cmd MATH_OPERATOR .)
    STRING          reduce using rule 15 (Cmd -> Cmd MATH_OPERATOR .)
    EMIT            reduce using rule 15 (Cmd -> Cmd MATH_OPERATOR .)
    DOT             reduce using rule 15 (Cmd -> Cmd MATH_OPERATOR .)
    CHR             reduce using rule 15 (Cmd -> Cmd MATH_OPERATOR .)
    DUP             reduce using rule 15 (Cmd -> Cmd MATH_OPERATOR .)
    PRINTSTRING     reduce using rule 15 (Cmd -> Cmd MATH_OPERATOR .)
    NUMBER          reduce using rule 15 (Cmd -> Cmd MATH_OPERATOR .)
    MATH_OPERATOR   reduce using rule 15 (Cmd -> Cmd MATH_OPERATOR .)
    COLON           reduce using rule 15 (Cmd -> Cmd MATH_OPERATOR .)
    $end            reduce using rule 15 (Cmd -> Cmd MATH_OPERATOR .)


state 11

    (12) Cmd -> Cmd DUP .

    NAME            reduce using rule 12 (Cmd -> Cmd DUP .)
    VARIABLE        reduce using rule 12 (Cmd -> Cmd DUP .)
    KEY             reduce using rule 12 (Cmd -> Cmd DUP .)
    CR              reduce using rule 12 (Cmd -> Cmd DUP .)
    STRING          reduce using rule 12 (Cmd -> Cmd DUP .)
    EMIT            reduce using rule 12 (Cmd -> Cmd DUP .)
    DOT             reduce using rule 12 (Cmd -> Cmd DUP .)
    CHR             reduce using rule 12 (Cmd -> Cmd DUP .)
    DUP             reduce using rule 12 (Cmd -> Cmd DUP .)
    PRINTSTRING     reduce using rule 12 (Cmd -> Cmd DUP .)
    NUMBER          reduce using rule 12 (Cmd -> Cmd DUP .)
    MATH_OPERATOR   reduce using rule 12 (Cmd -> Cmd DUP .)
    COLON           reduce using rule 12 (Cmd -> Cmd DUP .)
    $end            reduce using rule 12 (Cmd -> Cmd DUP .)


state 12

    (13) Cmd -> Cmd PRINTSTRING .

    NAME            reduce using rule 13 (Cmd -> Cmd PRINTSTRING .)
    VARIABLE        reduce using rule 13 (Cmd -> Cmd PRINTSTRING .)
    KEY             reduce using rule 13 (Cmd -> Cmd PRINTSTRING .)
    CR              reduce using rule 13 (Cmd -> Cmd PRINTSTRING .)
    STRING          reduce using rule 13 (Cmd -> Cmd PRINTSTRING .)
    EMIT            reduce using rule 13 (Cmd -> Cmd PRINTSTRING .)
    DOT             reduce using rule 13 (Cmd -> Cmd PRINTSTRING .)
    CHR             reduce using rule 13 (Cmd -> Cmd PRINTSTRING .)
    DUP             reduce using rule 13 (Cmd -> Cmd PRINTSTRING .)
    PRINTSTRING     reduce using rule 13 (Cmd -> Cmd PRINTSTRING .)
    NUMBER          reduce using rule 13 (Cmd -> Cmd PRINTSTRING .)
    MATH_OPERATOR   reduce using rule 13 (Cmd -> Cmd PRINTSTRING .)
    COLON           reduce using rule 13 (Cmd -> Cmd PRINTSTRING .)
    $end            reduce using rule 13 (Cmd -> Cmd PRINTSTRING .)


state 13

    (14) Cmd -> Cmd NUMBER .

    NAME            reduce using rule 14 (Cmd -> Cmd NUMBER .)
    VARIABLE        reduce using rule 14 (Cmd -> Cmd NUMBER .)
    KEY             reduce using rule 14 (Cmd -> Cmd NUMBER .)
    CR              reduce using rule 14 (Cmd -> Cmd NUMBER .)
    STRING          reduce using rule 14 (Cmd -> Cmd NUMBER .)
    EMIT            reduce using rule 14 (Cmd -> Cmd NUMBER .)
    DOT             reduce using rule 14 (Cmd -> Cmd NUMBER .)
    CHR             reduce using rule 14 (Cmd -> Cmd NUMBER .)
    DUP             reduce using rule 14 (Cmd -> Cmd NUMBER .)
    PRINTSTRING     reduce using rule 14 (Cmd -> Cmd NUMBER .)
    NUMBER          reduce using rule 14 (Cmd -> Cmd NUMBER .)
    MATH_OPERATOR   reduce using rule 14 (Cmd -> Cmd NUMBER .)
    COLON           reduce using rule 14 (Cmd -> Cmd NUMBER .)
    $end            reduce using rule 14 (Cmd -> Cmd NUMBER .)


state 14

    (33) Cmd -> Cmd Function .

    NAME            reduce using rule 33 (Cmd -> Cmd Function .)
    VARIABLE        reduce using rule 33 (Cmd -> Cmd Function .)
    KEY             reduce using rule 33 (Cmd -> Cmd Function .)
    CR              reduce using rule 33 (Cmd -> Cmd Function .)
    STRING          reduce using rule 33 (Cmd -> Cmd Function .)
    EMIT            reduce using rule 33 (Cmd -> Cmd Function .)
    DOT             reduce using rule 33 (Cmd -> Cmd Function .)
    CHR             reduce using rule 33 (Cmd -> Cmd Function .)
    DUP             reduce using rule 33 (Cmd -> Cmd Function .)
    PRINTSTRING     reduce using rule 33 (Cmd -> Cmd Function .)
    NUMBER          reduce using rule 33 (Cmd -> Cmd Function .)
    MATH_OPERATOR   reduce using rule 33 (Cmd -> Cmd Function .)
    COLON           reduce using rule 33 (Cmd -> Cmd Function .)
    $end            reduce using rule 33 (Cmd -> Cmd Function .)


state 15

    (17) Function -> COLON . NAME Exp SEMICOLON

    NAME            shift and go to state 21


state 16

    (1) Cmd -> Cmd NAME SET .

    NAME            reduce using rule 1 (Cmd -> Cmd NAME SET .)
    VARIABLE        reduce using rule 1 (Cmd -> Cmd NAME SET .)
    KEY             reduce using rule 1 (Cmd -> Cmd NAME SET .)
    CR              reduce using rule 1 (Cmd -> Cmd NAME SET .)
    STRING          reduce using rule 1 (Cmd -> Cmd NAME SET .)
    EMIT            reduce using rule 1 (Cmd -> Cmd NAME SET .)
    DOT             reduce using rule 1 (Cmd -> Cmd NAME SET .)
    CHR             reduce using rule 1 (Cmd -> Cmd NAME SET .)
    DUP             reduce using rule 1 (Cmd -> Cmd NAME SET .)
    PRINTSTRING     reduce using rule 1 (Cmd -> Cmd NAME SET .)
    NUMBER          reduce using rule 1 (Cmd -> Cmd NAME SET .)
    MATH_OPERATOR   reduce using rule 1 (Cmd -> Cmd NAME SET .)
    COLON           reduce using rule 1 (Cmd -> Cmd NAME SET .)
    $end            reduce using rule 1 (Cmd -> Cmd NAME SET .)


state 17

    (2) Cmd -> Cmd NAME GET .

    NAME            reduce using rule 2 (Cmd -> Cmd NAME GET .)
    VARIABLE        reduce using rule 2 (Cmd -> Cmd NAME GET .)
    KEY             reduce using rule 2 (Cmd -> Cmd NAME GET .)
    CR              reduce using rule 2 (Cmd -> Cmd NAME GET .)
    STRING          reduce using rule 2 (Cmd -> Cmd NAME GET .)
    EMIT            reduce using rule 2 (Cmd -> Cmd NAME GET .)
    DOT             reduce using rule 2 (Cmd -> Cmd NAME GET .)
    CHR             reduce using rule 2 (Cmd -> Cmd NAME GET .)
    DUP             reduce using rule 2 (Cmd -> Cmd NAME GET .)
    PRINTSTRING     reduce using rule 2 (Cmd -> Cmd NAME GET .)
    NUMBER          reduce using rule 2 (Cmd -> Cmd NAME GET .)
    MATH_OPERATOR   reduce using rule 2 (Cmd -> Cmd NAME GET .)
    COLON           reduce using rule 2 (Cmd -> Cmd NAME GET .)
    $end            reduce using rule 2 (Cmd -> Cmd NAME GET .)


state 18

    (3) Cmd -> Cmd VARIABLE NAME .

    NAME            reduce using rule 3 (Cmd -> Cmd VARIABLE NAME .)
    VARIABLE        reduce using rule 3 (Cmd -> Cmd VARIABLE NAME .)
    KEY             reduce using rule 3 (Cmd -> Cmd VARIABLE NAME .)
    CR              reduce using rule 3 (Cmd -> Cmd VARIABLE NAME .)
    STRING          reduce using rule 3 (Cmd -> Cmd VARIABLE NAME .)
    EMIT            reduce using rule 3 (Cmd -> Cmd VARIABLE NAME .)
    DOT             reduce using rule 3 (Cmd -> Cmd VARIABLE NAME .)
    CHR             reduce using rule 3 (Cmd -> Cmd VARIABLE NAME .)
    DUP             reduce using rule 3 (Cmd -> Cmd VARIABLE NAME .)
    PRINTSTRING     reduce using rule 3 (Cmd -> Cmd VARIABLE NAME .)
    NUMBER          reduce using rule 3 (Cmd -> Cmd VARIABLE NAME .)
    MATH_OPERATOR   reduce using rule 3 (Cmd -> Cmd VARIABLE NAME .)
    COLON           reduce using rule 3 (Cmd -> Cmd VARIABLE NAME .)
    $end            reduce using rule 3 (Cmd -> Cmd VARIABLE NAME .)


state 19

    (10) Cmd -> Cmd CHR CHAR .

    NAME            reduce using rule 10 (Cmd -> Cmd CHR CHAR .)
    VARIABLE        reduce using rule 10 (Cmd -> Cmd CHR CHAR .)
    KEY             reduce using rule 10 (Cmd -> Cmd CHR CHAR .)
    CR              reduce using rule 10 (Cmd -> Cmd CHR CHAR .)
    STRING          reduce using rule 10 (Cmd -> Cmd CHR CHAR .)
    EMIT            reduce using rule 10 (Cmd -> Cmd CHR CHAR .)
    DOT             reduce using rule 10 (Cmd -> Cmd CHR CHAR .)
    CHR             reduce using rule 10 (Cmd -> Cmd CHR CHAR .)
    DUP             reduce using rule 10 (Cmd -> Cmd CHR CHAR .)
    PRINTSTRING     reduce using rule 10 (Cmd -> Cmd CHR CHAR .)
    NUMBER          reduce using rule 10 (Cmd -> Cmd CHR CHAR .)
    MATH_OPERATOR   reduce using rule 10 (Cmd -> Cmd CHR CHAR .)
    COLON           reduce using rule 10 (Cmd -> Cmd CHR CHAR .)
    $end            reduce using rule 10 (Cmd -> Cmd CHR CHAR .)


state 20

    (11) Cmd -> Cmd CHR MATH_OPERATOR .

    NAME            reduce using rule 11 (Cmd -> Cmd CHR MATH_OPERATOR .)
    VARIABLE        reduce using rule 11 (Cmd -> Cmd CHR MATH_OPERATOR .)
    KEY             reduce using rule 11 (Cmd -> Cmd CHR MATH_OPERATOR .)
    CR              reduce using rule 11 (Cmd -> Cmd CHR MATH_OPERATOR .)
    STRING          reduce using rule 11 (Cmd -> Cmd CHR MATH_OPERATOR .)
    EMIT            reduce using rule 11 (Cmd -> Cmd CHR MATH_OPERATOR .)
    DOT             reduce using rule 11 (Cmd -> Cmd CHR MATH_OPERATOR .)
    CHR             reduce using rule 11 (Cmd -> Cmd CHR MATH_OPERATOR .)
    DUP             reduce using rule 11 (Cmd -> Cmd CHR MATH_OPERATOR .)
    PRINTSTRING     reduce using rule 11 (Cmd -> Cmd CHR MATH_OPERATOR .)
    NUMBER          reduce using rule 11 (Cmd -> Cmd CHR MATH_OPERATOR .)
    MATH_OPERATOR   reduce using rule 11 (Cmd -> Cmd CHR MATH_OPERATOR .)
    COLON           reduce using rule 11 (Cmd -> Cmd CHR MATH_OPERATOR .)
    $end            reduce using rule 11 (Cmd -> Cmd CHR MATH_OPERATOR .)


state 21

    (17) Function -> COLON NAME . Exp SEMICOLON
    (18) Exp -> . Function_operator
    (19) Exp -> . NUMBER
    (20) Exp -> . Exp Function_operator
    (21) Exp -> . Exp NUMBER
    (22) Function_operator -> . MATH_OPERATOR
    (23) Function_operator -> . DUP
    (24) Function_operator -> . EMIT
    (25) Function_operator -> . CR
    (26) Function_operator -> . SPACE
    (27) Function_operator -> . LPAREN
    (28) Function_operator -> . RPAREN
    (29) Function_operator -> . IF
    (30) Function_operator -> . THEN
    (31) Function_operator -> . ELSE
    (32) Function_operator -> . PRINTSTRING

    NUMBER          shift and go to state 24
    MATH_OPERATOR   shift and go to state 25
    DUP             shift and go to state 26
    EMIT            shift and go to state 27
    CR              shift and go to state 28
    SPACE           shift and go to state 29
    LPAREN          shift and go to state 30
    RPAREN          shift and go to state 31
    IF              shift and go to state 32
    THEN            shift and go to state 33
    ELSE            shift and go to state 34
    PRINTSTRING     shift and go to state 35

    Exp                            shift and go to state 22
    Function_operator              shift and go to state 23

state 22

    (17) Function -> COLON NAME Exp . SEMICOLON
    (20) Exp -> Exp . Function_operator
    (21) Exp -> Exp . NUMBER
    (22) Function_operator -> . MATH_OPERATOR
    (23) Function_operator -> . DUP
    (24) Function_operator -> . EMIT
    (25) Function_operator -> . CR
    (26) Function_operator -> . SPACE
    (27) Function_operator -> . LPAREN
    (28) Function_operator -> . RPAREN
    (29) Function_operator -> . IF
    (30) Function_operator -> . THEN
    (31) Function_operator -> . ELSE
    (32) Function_operator -> . PRINTSTRING

    SEMICOLON       shift and go to state 36
    NUMBER          shift and go to state 38
    MATH_OPERATOR   shift and go to state 25
    DUP             shift and go to state 26
    EMIT            shift and go to state 27
    CR              shift and go to state 28
    SPACE           shift and go to state 29
    LPAREN          shift and go to state 30
    RPAREN          shift and go to state 31
    IF              shift and go to state 32
    THEN            shift and go to state 33
    ELSE            shift and go to state 34
    PRINTSTRING     shift and go to state 35

    Function_operator              shift and go to state 37

state 23

    (18) Exp -> Function_operator .

    SEMICOLON       reduce using rule 18 (Exp -> Function_operator .)
    NUMBER          reduce using rule 18 (Exp -> Function_operator .)
    MATH_OPERATOR   reduce using rule 18 (Exp -> Function_operator .)
    DUP             reduce using rule 18 (Exp -> Function_operator .)
    EMIT            reduce using rule 18 (Exp -> Function_operator .)
    CR              reduce using rule 18 (Exp -> Function_operator .)
    SPACE           reduce using rule 18 (Exp -> Function_operator .)
    LPAREN          reduce using rule 18 (Exp -> Function_operator .)
    RPAREN          reduce using rule 18 (Exp -> Function_operator .)
    IF              reduce using rule 18 (Exp -> Function_operator .)
    THEN            reduce using rule 18 (Exp -> Function_operator .)
    ELSE            reduce using rule 18 (Exp -> Function_operator .)
    PRINTSTRING     reduce using rule 18 (Exp -> Function_operator .)


state 24

    (19) Exp -> NUMBER .

    SEMICOLON       reduce using rule 19 (Exp -> NUMBER .)
    NUMBER          reduce using rule 19 (Exp -> NUMBER .)
    MATH_OPERATOR   reduce using rule 19 (Exp -> NUMBER .)
    DUP             reduce using rule 19 (Exp -> NUMBER .)
    EMIT            reduce using rule 19 (Exp -> NUMBER .)
    CR              reduce using rule 19 (Exp -> NUMBER .)
    SPACE           reduce using rule 19 (Exp -> NUMBER .)
    LPAREN          reduce using rule 19 (Exp -> NUMBER .)
    RPAREN          reduce using rule 19 (Exp -> NUMBER .)
    IF              reduce using rule 19 (Exp -> NUMBER .)
    THEN            reduce using rule 19 (Exp -> NUMBER .)
    ELSE            reduce using rule 19 (Exp -> NUMBER .)
    PRINTSTRING     reduce using rule 19 (Exp -> NUMBER .)


state 25

    (22) Function_operator -> MATH_OPERATOR .

    SEMICOLON       reduce using rule 22 (Function_operator -> MATH_OPERATOR .)
    NUMBER          reduce using rule 22 (Function_operator -> MATH_OPERATOR .)
    MATH_OPERATOR   reduce using rule 22 (Function_operator -> MATH_OPERATOR .)
    DUP             reduce using rule 22 (Function_operator -> MATH_OPERATOR .)
    EMIT            reduce using rule 22 (Function_operator -> MATH_OPERATOR .)
    CR              reduce using rule 22 (Function_operator -> MATH_OPERATOR .)
    SPACE           reduce using rule 22 (Function_operator -> MATH_OPERATOR .)
    LPAREN          reduce using rule 22 (Function_operator -> MATH_OPERATOR .)
    RPAREN          reduce using rule 22 (Function_operator -> MATH_OPERATOR .)
    IF              reduce using rule 22 (Function_operator -> MATH_OPERATOR .)
    THEN            reduce using rule 22 (Function_operator -> MATH_OPERATOR .)
    ELSE            reduce using rule 22 (Function_operator -> MATH_OPERATOR .)
    PRINTSTRING     reduce using rule 22 (Function_operator -> MATH_OPERATOR .)


state 26

    (23) Function_operator -> DUP .

    SEMICOLON       reduce using rule 23 (Function_operator -> DUP .)
    NUMBER          reduce using rule 23 (Function_operator -> DUP .)
    MATH_OPERATOR   reduce using rule 23 (Function_operator -> DUP .)
    DUP             reduce using rule 23 (Function_operator -> DUP .)
    EMIT            reduce using rule 23 (Function_operator -> DUP .)
    CR              reduce using rule 23 (Function_operator -> DUP .)
    SPACE           reduce using rule 23 (Function_operator -> DUP .)
    LPAREN          reduce using rule 23 (Function_operator -> DUP .)
    RPAREN          reduce using rule 23 (Function_operator -> DUP .)
    IF              reduce using rule 23 (Function_operator -> DUP .)
    THEN            reduce using rule 23 (Function_operator -> DUP .)
    ELSE            reduce using rule 23 (Function_operator -> DUP .)
    PRINTSTRING     reduce using rule 23 (Function_operator -> DUP .)


state 27

    (24) Function_operator -> EMIT .

    SEMICOLON       reduce using rule 24 (Function_operator -> EMIT .)
    NUMBER          reduce using rule 24 (Function_operator -> EMIT .)
    MATH_OPERATOR   reduce using rule 24 (Function_operator -> EMIT .)
    DUP             reduce using rule 24 (Function_operator -> EMIT .)
    EMIT            reduce using rule 24 (Function_operator -> EMIT .)
    CR              reduce using rule 24 (Function_operator -> EMIT .)
    SPACE           reduce using rule 24 (Function_operator -> EMIT .)
    LPAREN          reduce using rule 24 (Function_operator -> EMIT .)
    RPAREN          reduce using rule 24 (Function_operator -> EMIT .)
    IF              reduce using rule 24 (Function_operator -> EMIT .)
    THEN            reduce using rule 24 (Function_operator -> EMIT .)
    ELSE            reduce using rule 24 (Function_operator -> EMIT .)
    PRINTSTRING     reduce using rule 24 (Function_operator -> EMIT .)


state 28

    (25) Function_operator -> CR .

    SEMICOLON       reduce using rule 25 (Function_operator -> CR .)
    NUMBER          reduce using rule 25 (Function_operator -> CR .)
    MATH_OPERATOR   reduce using rule 25 (Function_operator -> CR .)
    DUP             reduce using rule 25 (Function_operator -> CR .)
    EMIT            reduce using rule 25 (Function_operator -> CR .)
    CR              reduce using rule 25 (Function_operator -> CR .)
    SPACE           reduce using rule 25 (Function_operator -> CR .)
    LPAREN          reduce using rule 25 (Function_operator -> CR .)
    RPAREN          reduce using rule 25 (Function_operator -> CR .)
    IF              reduce using rule 25 (Function_operator -> CR .)
    THEN            reduce using rule 25 (Function_operator -> CR .)
    ELSE            reduce using rule 25 (Function_operator -> CR .)
    PRINTSTRING     reduce using rule 25 (Function_operator -> CR .)


state 29

    (26) Function_operator -> SPACE .

    SEMICOLON       reduce using rule 26 (Function_operator -> SPACE .)
    NUMBER          reduce using rule 26 (Function_operator -> SPACE .)
    MATH_OPERATOR   reduce using rule 26 (Function_operator -> SPACE .)
    DUP             reduce using rule 26 (Function_operator -> SPACE .)
    EMIT            reduce using rule 26 (Function_operator -> SPACE .)
    CR              reduce using rule 26 (Function_operator -> SPACE .)
    SPACE           reduce using rule 26 (Function_operator -> SPACE .)
    LPAREN          reduce using rule 26 (Function_operator -> SPACE .)
    RPAREN          reduce using rule 26 (Function_operator -> SPACE .)
    IF              reduce using rule 26 (Function_operator -> SPACE .)
    THEN            reduce using rule 26 (Function_operator -> SPACE .)
    ELSE            reduce using rule 26 (Function_operator -> SPACE .)
    PRINTSTRING     reduce using rule 26 (Function_operator -> SPACE .)


state 30

    (27) Function_operator -> LPAREN .

    SEMICOLON       reduce using rule 27 (Function_operator -> LPAREN .)
    NUMBER          reduce using rule 27 (Function_operator -> LPAREN .)
    MATH_OPERATOR   reduce using rule 27 (Function_operator -> LPAREN .)
    DUP             reduce using rule 27 (Function_operator -> LPAREN .)
    EMIT            reduce using rule 27 (Function_operator -> LPAREN .)
    CR              reduce using rule 27 (Function_operator -> LPAREN .)
    SPACE           reduce using rule 27 (Function_operator -> LPAREN .)
    LPAREN          reduce using rule 27 (Function_operator -> LPAREN .)
    RPAREN          reduce using rule 27 (Function_operator -> LPAREN .)
    IF              reduce using rule 27 (Function_operator -> LPAREN .)
    THEN            reduce using rule 27 (Function_operator -> LPAREN .)
    ELSE            reduce using rule 27 (Function_operator -> LPAREN .)
    PRINTSTRING     reduce using rule 27 (Function_operator -> LPAREN .)


state 31

    (28) Function_operator -> RPAREN .

    SEMICOLON       reduce using rule 28 (Function_operator -> RPAREN .)
    NUMBER          reduce using rule 28 (Function_operator -> RPAREN .)
    MATH_OPERATOR   reduce using rule 28 (Function_operator -> RPAREN .)
    DUP             reduce using rule 28 (Function_operator -> RPAREN .)
    EMIT            reduce using rule 28 (Function_operator -> RPAREN .)
    CR              reduce using rule 28 (Function_operator -> RPAREN .)
    SPACE           reduce using rule 28 (Function_operator -> RPAREN .)
    LPAREN          reduce using rule 28 (Function_operator -> RPAREN .)
    RPAREN          reduce using rule 28 (Function_operator -> RPAREN .)
    IF              reduce using rule 28 (Function_operator -> RPAREN .)
    THEN            reduce using rule 28 (Function_operator -> RPAREN .)
    ELSE            reduce using rule 28 (Function_operator -> RPAREN .)
    PRINTSTRING     reduce using rule 28 (Function_operator -> RPAREN .)


state 32

    (29) Function_operator -> IF .

    SEMICOLON       reduce using rule 29 (Function_operator -> IF .)
    NUMBER          reduce using rule 29 (Function_operator -> IF .)
    MATH_OPERATOR   reduce using rule 29 (Function_operator -> IF .)
    DUP             reduce using rule 29 (Function_operator -> IF .)
    EMIT            reduce using rule 29 (Function_operator -> IF .)
    CR              reduce using rule 29 (Function_operator -> IF .)
    SPACE           reduce using rule 29 (Function_operator -> IF .)
    LPAREN          reduce using rule 29 (Function_operator -> IF .)
    RPAREN          reduce using rule 29 (Function_operator -> IF .)
    IF              reduce using rule 29 (Function_operator -> IF .)
    THEN            reduce using rule 29 (Function_operator -> IF .)
    ELSE            reduce using rule 29 (Function_operator -> IF .)
    PRINTSTRING     reduce using rule 29 (Function_operator -> IF .)


state 33

    (30) Function_operator -> THEN .

    SEMICOLON       reduce using rule 30 (Function_operator -> THEN .)
    NUMBER          reduce using rule 30 (Function_operator -> THEN .)
    MATH_OPERATOR   reduce using rule 30 (Function_operator -> THEN .)
    DUP             reduce using rule 30 (Function_operator -> THEN .)
    EMIT            reduce using rule 30 (Function_operator -> THEN .)
    CR              reduce using rule 30 (Function_operator -> THEN .)
    SPACE           reduce using rule 30 (Function_operator -> THEN .)
    LPAREN          reduce using rule 30 (Function_operator -> THEN .)
    RPAREN          reduce using rule 30 (Function_operator -> THEN .)
    IF              reduce using rule 30 (Function_operator -> THEN .)
    THEN            reduce using rule 30 (Function_operator -> THEN .)
    ELSE            reduce using rule 30 (Function_operator -> THEN .)
    PRINTSTRING     reduce using rule 30 (Function_operator -> THEN .)


state 34

    (31) Function_operator -> ELSE .

    SEMICOLON       reduce using rule 31 (Function_operator -> ELSE .)
    NUMBER          reduce using rule 31 (Function_operator -> ELSE .)
    MATH_OPERATOR   reduce using rule 31 (Function_operator -> ELSE .)
    DUP             reduce using rule 31 (Function_operator -> ELSE .)
    EMIT            reduce using rule 31 (Function_operator -> ELSE .)
    CR              reduce using rule 31 (Function_operator -> ELSE .)
    SPACE           reduce using rule 31 (Function_operator -> ELSE .)
    LPAREN          reduce using rule 31 (Function_operator -> ELSE .)
    RPAREN          reduce using rule 31 (Function_operator -> ELSE .)
    IF              reduce using rule 31 (Function_operator -> ELSE .)
    THEN            reduce using rule 31 (Function_operator -> ELSE .)
    ELSE            reduce using rule 31 (Function_operator -> ELSE .)
    PRINTSTRING     reduce using rule 31 (Function_operator -> ELSE .)


state 35

    (32) Function_operator -> PRINTSTRING .

    SEMICOLON       reduce using rule 32 (Function_operator -> PRINTSTRING .)
    NUMBER          reduce using rule 32 (Function_operator -> PRINTSTRING .)
    MATH_OPERATOR   reduce using rule 32 (Function_operator -> PRINTSTRING .)
    DUP             reduce using rule 32 (Function_operator -> PRINTSTRING .)
    EMIT            reduce using rule 32 (Function_operator -> PRINTSTRING .)
    CR              reduce using rule 32 (Function_operator -> PRINTSTRING .)
    SPACE           reduce using rule 32 (Function_operator -> PRINTSTRING .)
    LPAREN          reduce using rule 32 (Function_operator -> PRINTSTRING .)
    RPAREN          reduce using rule 32 (Function_operator -> PRINTSTRING .)
    IF              reduce using rule 32 (Function_operator -> PRINTSTRING .)
    THEN            reduce using rule 32 (Function_operator -> PRINTSTRING .)
    ELSE            reduce using rule 32 (Function_operator -> PRINTSTRING .)
    PRINTSTRING     reduce using rule 32 (Function_operator -> PRINTSTRING .)


state 36

    (17) Function -> COLON NAME Exp SEMICOLON .

    NAME            reduce using rule 17 (Function -> COLON NAME Exp SEMICOLON .)
    VARIABLE        reduce using rule 17 (Function -> COLON NAME Exp SEMICOLON .)
    KEY             reduce using rule 17 (Function -> COLON NAME Exp SEMICOLON .)
    CR              reduce using rule 17 (Function -> COLON NAME Exp SEMICOLON .)
    STRING          reduce using rule 17 (Function -> COLON NAME Exp SEMICOLON .)
    EMIT            reduce using rule 17 (Function -> COLON NAME Exp SEMICOLON .)
    DOT             reduce using rule 17 (Function -> COLON NAME Exp SEMICOLON .)
    CHR             reduce using rule 17 (Function -> COLON NAME Exp SEMICOLON .)
    DUP             reduce using rule 17 (Function -> COLON NAME Exp SEMICOLON .)
    PRINTSTRING     reduce using rule 17 (Function -> COLON NAME Exp SEMICOLON .)
    NUMBER          reduce using rule 17 (Function -> COLON NAME Exp SEMICOLON .)
    MATH_OPERATOR   reduce using rule 17 (Function -> COLON NAME Exp SEMICOLON .)
    COLON           reduce using rule 17 (Function -> COLON NAME Exp SEMICOLON .)
    $end            reduce using rule 17 (Function -> COLON NAME Exp SEMICOLON .)


state 37

    (20) Exp -> Exp Function_operator .

    SEMICOLON       reduce using rule 20 (Exp -> Exp Function_operator .)
    NUMBER          reduce using rule 20 (Exp -> Exp Function_operator .)
    MATH_OPERATOR   reduce using rule 20 (Exp -> Exp Function_operator .)
    DUP             reduce using rule 20 (Exp -> Exp Function_operator .)
    EMIT            reduce using rule 20 (Exp -> Exp Function_operator .)
    CR              reduce using rule 20 (Exp -> Exp Function_operator .)
    SPACE           reduce using rule 20 (Exp -> Exp Function_operator .)
    LPAREN          reduce using rule 20 (Exp -> Exp Function_operator .)
    RPAREN          reduce using rule 20 (Exp -> Exp Function_operator .)
    IF              reduce using rule 20 (Exp -> Exp Function_operator .)
    THEN            reduce using rule 20 (Exp -> Exp Function_operator .)
    ELSE            reduce using rule 20 (Exp -> Exp Function_operator .)
    PRINTSTRING     reduce using rule 20 (Exp -> Exp Function_operator .)


state 38

    (21) Exp -> Exp NUMBER .

    SEMICOLON       reduce using rule 21 (Exp -> Exp NUMBER .)
    NUMBER          reduce using rule 21 (Exp -> Exp NUMBER .)
    MATH_OPERATOR   reduce using rule 21 (Exp -> Exp NUMBER .)
    DUP             reduce using rule 21 (Exp -> Exp NUMBER .)
    EMIT            reduce using rule 21 (Exp -> Exp NUMBER .)
    CR              reduce using rule 21 (Exp -> Exp NUMBER .)
    SPACE           reduce using rule 21 (Exp -> Exp NUMBER .)
    LPAREN          reduce using rule 21 (Exp -> Exp NUMBER .)
    RPAREN          reduce using rule 21 (Exp -> Exp NUMBER .)
    IF              reduce using rule 21 (Exp -> Exp NUMBER .)
    THEN            reduce using rule 21 (Exp -> Exp NUMBER .)
    ELSE            reduce using rule 21 (Exp -> Exp NUMBER .)
    PRINTSTRING     reduce using rule 21 (Exp -> Exp NUMBER .)


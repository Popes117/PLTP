Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    ELSE
    FUNCTION_DEFINITION
    IF
    SPACE
    SPACES
    THEN

Grammar

Rule 0     S' -> Line
Rule 1     Line -> Line Exp
Rule 2     Line -> Line Function
Rule 3     Line -> <empty>
Rule 4     Cmd -> Cmd NAME SET
Rule 5     Cmd -> Cmd NAME GET
Rule 6     Cmd -> Cmd VARIABLE NAME
Rule 7     Cmd -> Cmd NAME
Rule 8     Cmd -> Cmd KEY
Rule 9     Cmd -> Cmd CR
Rule 10    Cmd -> Cmd STRING
Rule 11    Cmd -> Cmd EMIT
Rule 12    Cmd -> Cmd DOT
Rule 13    Cmd -> Cmd CHR CHAR
Rule 14    Cmd -> Cmd CHR MATH_OPERATOR
Rule 15    Cmd -> Cmd DUP
Rule 16    Cmd -> Cmd PRINTSTRING
Rule 17    Cmd -> Cmd NUMBER
Rule 18    Cmd -> Cmd MATH_OPERATOR
Rule 19    Cmd -> <empty>
Rule 20    DefineString -> COLON NAME FUNCONTENT SEMICOLON Line
Rule 21    Arguments -> ARGUMENT
Rule 22    Arguments -> Arguments ARGUMENT
Rule 23    Arguments -> <empty>
Rule 24    Function -> COLON NAME LPAREN Arguments ARGDELIMITER ARGUMENT RPAREN FUNCONTENT SEMICOLON Line
Rule 25    Function -> DefineString
Rule 26    Function -> <empty>
Rule 27    Exp -> Cmd Exp
Rule 28    Exp -> <empty>

Terminals, with rules where they appear

ARGDELIMITER         : 24
ARGUMENT             : 21 22 24
CHAR                 : 13
CHR                  : 13 14
COLON                : 20 24
COMMENT              : 
CR                   : 9
DOT                  : 12
DUP                  : 15
ELSE                 : 
EMIT                 : 11
FUNCONTENT           : 20 24
FUNCTION_DEFINITION  : 
GET                  : 5
IF                   : 
KEY                  : 8
LPAREN               : 24
MATH_OPERATOR        : 14 18
NAME                 : 4 5 6 7 20 24
NUMBER               : 17
PRINTSTRING          : 16
RPAREN               : 24
SEMICOLON            : 20 24
SET                  : 4
SPACE                : 
SPACES               : 
STRING               : 10
THEN                 : 
VARIABLE             : 6
error                : 

Nonterminals, with rules where they appear

Arguments            : 22 24
Cmd                  : 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 27
DefineString         : 25
Exp                  : 1 27
Function             : 2
Line                 : 1 2 20 24 0

Parsing method: LALR

state 0

    (0) S' -> . Line
    (1) Line -> . Line Exp
    (2) Line -> . Line Function
    (3) Line -> .

    COLON           reduce using rule 3 (Line -> .)
    $end            reduce using rule 3 (Line -> .)
    NAME            reduce using rule 3 (Line -> .)
    VARIABLE        reduce using rule 3 (Line -> .)
    KEY             reduce using rule 3 (Line -> .)
    CR              reduce using rule 3 (Line -> .)
    STRING          reduce using rule 3 (Line -> .)
    EMIT            reduce using rule 3 (Line -> .)
    DOT             reduce using rule 3 (Line -> .)
    CHR             reduce using rule 3 (Line -> .)
    DUP             reduce using rule 3 (Line -> .)
    PRINTSTRING     reduce using rule 3 (Line -> .)
    NUMBER          reduce using rule 3 (Line -> .)
    MATH_OPERATOR   reduce using rule 3 (Line -> .)

    Line                           shift and go to state 1

state 1

    (0) S' -> Line .
    (1) Line -> Line . Exp
    (2) Line -> Line . Function
    (27) Exp -> . Cmd Exp
    (28) Exp -> .
    (24) Function -> . COLON NAME LPAREN Arguments ARGDELIMITER ARGUMENT RPAREN FUNCONTENT SEMICOLON Line
    (25) Function -> . DefineString
    (26) Function -> .
    (4) Cmd -> . Cmd NAME SET
    (5) Cmd -> . Cmd NAME GET
    (6) Cmd -> . Cmd VARIABLE NAME
    (7) Cmd -> . Cmd NAME
    (8) Cmd -> . Cmd KEY
    (9) Cmd -> . Cmd CR
    (10) Cmd -> . Cmd STRING
    (11) Cmd -> . Cmd EMIT
    (12) Cmd -> . Cmd DOT
    (13) Cmd -> . Cmd CHR CHAR
    (14) Cmd -> . Cmd CHR MATH_OPERATOR
    (15) Cmd -> . Cmd DUP
    (16) Cmd -> . Cmd PRINTSTRING
    (17) Cmd -> . Cmd NUMBER
    (18) Cmd -> . Cmd MATH_OPERATOR
    (19) Cmd -> .
    (20) DefineString -> . COLON NAME FUNCONTENT SEMICOLON Line

